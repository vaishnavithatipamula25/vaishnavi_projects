import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.metrics.pairwise import cosine_similarity
import numpy as np
movies = pd.read_csv('movies.csv')
ratings = pd.read_csv('ratings.csv')
merged_data = pd.merge(ratings, movies, on='movieId')
user_movie_matrix = merged_data.pivot_table(index='userId', columns='title', values='rating')
user_movie_matrix.fillna(0, inplace=True)
user_similarity = cosine_similarity(user_movie_matrix)
user_similarity_df = pd.DataFrame(user_similarity, index=user_movie_matrix.index, columns=user_movie_matrix.index)
def recommend_movies(user_id, num_recommendations=5):
    similar_users = user_similarity_df[user_id].sort_values(ascending=False).index[1:num_recommendations+1]
    similar_users_movies = user_movie_matrix.loc[similar_users].mean(axis=0)
    user_movies = user_movie_matrix.loc[user_id]
    movies_to_recommend = similar_users_movies[user_movies == 0].sort_values(ascending=False).head(num_recommendations)
    return movies_to_recommend.index
user_id = 3 # Change this to any user ID you'd like
recommended_movies = recommend_movies(user_id, num_recommendations=15)
print(f"Recommended movies for user {user_id}:")
for movie in recommended_movies:
    print(movie)
